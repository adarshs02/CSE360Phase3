/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

 buildscript {
    ext {
        // Variables if any
        //commonsVersion = '1.0.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
}

javafx {
    version = "21"
    // Found by eclipse
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.45.2.0'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-ext
    implementation group: 'org.slf4j', name: 'slf4j-ext', version: '2.0.12'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.12'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.intake.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources', 'src/main/java']
            // Add any additional resource directories if needed
        }
    }
}
